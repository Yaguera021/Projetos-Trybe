{
  "stats": {
    "suites": 12,
    "tests": 18,
    "passes": 16,
    "pending": 0,
    "failures": 2,
    "start": "2023-05-01T05:15:42.416Z",
    "end": "2023-05-01T05:16:10.727Z",
    "duration": 28311,
    "testsRegistered": 18,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "63125a28-a372-4656-ac41-b2afd9271cb5",
      "title": "",
      "fullFile": "cypress/e2e/project.cy.js",
      "file": "cypress/e2e/project.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9409b3db-5506-4ae1-b5e4-80662139ac3e",
          "title": "Shopping Cart Project",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2f5ecea2-9896-4b14-892f-bfd36321534b",
              "title": "1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 10108,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);",
                  "err": {},
                  "uuid": "02c4257c-6cfb-43e0-8976-1673d96b3b21",
                  "parentUUID": "2f5ecea2-9896-4b14-892f-bfd36321534b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02c4257c-6cfb-43e0-8976-1673d96b3b21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10108,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a53758e8-2986-4174-9043-02fa764a9ae4",
              "title": "2 - Implemente a função fetchProductsList",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 206,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n  await fetchProductsList();\n  throw new Error('A função não retornou um erro');\n} catch (err) {\n  if (err.message === 'A função não retornou um erro') throw err;\n  expect(err.message).to.be.equal('Termo de busca não informado');\n}",
                  "err": {},
                  "uuid": "8a9b3298-2298-4298-8fbf-0ee11e43ff31",
                  "parentUUID": "a53758e8-2986-4174-9043-02fa764a9ae4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProductsList('computador');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/sites/MLB/search?q=computador');",
                  "err": {},
                  "uuid": "e9d0b922-7334-4945-96db-6f67bb331acc",
                  "parentUUID": "a53758e8-2986-4174-9043-02fa764a9ae4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetchProductsList retorna os results da API",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna os results da API",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(fetchProductsList('computador')).should('be.deep.equal', results);",
                  "err": {},
                  "uuid": "2cb587d5-6671-4f38-a38d-8b20db079c3a",
                  "parentUUID": "a53758e8-2986-4174-9043-02fa764a9ae4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a9b3298-2298-4298-8fbf-0ee11e43ff31",
                "e9d0b922-7334-4945-96db-6f67bb331acc",
                "2cb587d5-6671-4f38-a38d-8b20db079c3a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 438,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6ffef9d5-3abb-4f54-9d04-17486385e161",
              "title": "3 - Crie uma listagem de produtos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Listagem de produtos",
                  "fullTitle": "Shopping Cart Project 3 - Crie uma listagem de produtos Listagem de produtos",
                  "timedOut": null,
                  "duration": 200,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(PRODUCT_SELECTOR).should('exist').should('have.length', results.length).get(PRODUCT_TITLE).each(($el, index) => {\n  expect($el.text()).to.be.equal(results[index].title);\n});",
                  "err": {},
                  "uuid": "9fdbdc45-f0d9-4456-b35f-a2af73f3fc63",
                  "parentUUID": "6ffef9d5-3abb-4f54-9d04-17486385e161",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9fdbdc45-f0d9-4456-b35f-a2af73f3fc63"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 200,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dcd567dd-7550-402b-b688-6a05f8e42935",
              "title": "4 - Adicione um texto de `carregando` durante uma requisição à API",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "fullTitle": "Shopping Cart Project 4 - Adicione um texto de `carregando` durante uma requisição à API Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "timedOut": null,
                  "duration": 3168,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch = url => new Promise(resolve => {\n      setTimeout(() => {\n        fetchMock(url).then(resolve);\n      }, 1000);\n    });\n  }\n});\ncy.get(LOADING).should('be.visible').wait(3000);\ncy.get(LOADING).should('not.exist');",
                  "err": {},
                  "uuid": "aaab4359-6f6b-43e3-9316-c11c249a81d9",
                  "parentUUID": "dcd567dd-7550-402b-b688-6a05f8e42935",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaab4359-6f6b-43e3-9316-c11c249a81d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3168,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b01de78a-abeb-45bd-93ab-f7be792c3ba0",
              "title": "5 - Exiba um texto de `erro` caso a requisição à API falhe",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(ERRO).should('not.exist');",
                  "err": {},
                  "uuid": "8ef8065c-c39b-4d9c-99a0-33842874dfce",
                  "parentUUID": "b01de78a-abeb-45bd-93ab-f7be792c3ba0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "timedOut": null,
                  "duration": 177,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch.callsFake(() => Promise.reject(new Error('API is down')));\n  }\n});\ncy.get(ERRO).should('be.visible');",
                  "err": {},
                  "uuid": "35e96910-4d2b-43df-ad20-5998c67600fc",
                  "parentUUID": "b01de78a-abeb-45bd-93ab-f7be792c3ba0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ef8065c-c39b-4d9c-99a0-33842874dfce",
                "35e96910-4d2b-43df-ad20-5998c67600fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 293,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f2ce60c8-2d37-4b9a-b053-f15230c50228",
              "title": "6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 110,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);",
                  "err": {},
                  "uuid": "3d5cbe16-7853-47bd-b7c5-5cc23601e222",
                  "parentUUID": "f2ce60c8-2d37-4b9a-b053-f15230c50228",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d5cbe16-7853-47bd-b7c5-5cc23601e222"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 110,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8d3a494d-1dc4-4e4f-952b-27b96b69fe75",
              "title": "7 - Implemente a função `fetchProduct`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 105,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct().then(() => done(new Error('A função não retornou um erro'))).catch(err => {\n  expect(err.message).to.be.equal('ID não informado');\n  done();\n});",
                  "err": {},
                  "uuid": "f00ae9f3-490f-4919-be42-720616e2c79f",
                  "parentUUID": "8d3a494d-1dc4-4e4f-952b-27b96b69fe75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "timedOut": null,
                  "duration": 127,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct('MLB1405519561');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/items/MLB1405519561');",
                  "err": {},
                  "uuid": "e3b67029-54ec-4f6f-8931-28f4084af84e",
                  "parentUUID": "8d3a494d-1dc4-4e4f-952b-27b96b69fe75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fetchProduct retorna os dados do produto",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna os dados do produto",
                  "timedOut": null,
                  "duration": 126,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const expectedResult = results.find(({\n  id\n}) => id === 'MLB1405519561');\ncy.wrap(fetchProduct('MLB1405519561')).should('be.deep.equal', _objectSpread(_objectSpread({}, expectedResult), {}, {\n  pictures\n}));",
                  "err": {},
                  "uuid": "d37f9ba6-ce6d-4d74-9040-55f3081e6ee3",
                  "parentUUID": "8d3a494d-1dc4-4e4f-952b-27b96b69fe75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f00ae9f3-490f-4919-be42-720616e2c79f",
                "e3b67029-54ec-4f6f-8931-28f4084af84e",
                "d37f9ba6-ce6d-4d74-9040-55f3081e6ee3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 358,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3c488db7-38b0-4a5d-a131-4a694c3e9d38",
              "title": "8 - Adicione o produto ao carrinho de compras",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicione o produto ao carrinho de compras",
                  "fullTitle": "Shopping Cart Project 8 - Adicione o produto ao carrinho de compras Adicione o produto ao carrinho de compras",
                  "timedOut": null,
                  "duration": 1425,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(1000);\naddToCart(36);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);",
                  "err": {},
                  "uuid": "79c5c8ca-8193-42dd-b2e2-1e41c8d914e2",
                  "parentUUID": "3c488db7-38b0-4a5d-a131-4a694c3e9d38",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79c5c8ca-8193-42dd-b2e2-1e41c8d914e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1425,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a07a1448-bd73-4ea8-a7b3-79e52f0cee4d",
              "title": "9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "fullTitle": "Shopping Cart Project 9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "timedOut": null,
                  "duration": 437,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const first = 36;\nconst last = 29;\naddToCart(first);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\naddToCart(last);\ncountCart(2);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncy.reload();\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncountCart(2);",
                  "err": {},
                  "uuid": "094c05a5-3991-435a-9d32-39ba33e0a221",
                  "parentUUID": "a07a1448-bd73-4ea8-a7b3-79e52f0cee4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "094c05a5-3991-435a-9d32-39ba33e0a221"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 437,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dbbeb1c7-c7bc-41a0-89e3-1b4887e3ae99",
              "title": "10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "timedOut": null,
                  "duration": 703,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(5);\ncheckPrice(results, [5]);\naddToCart(42);\ncheckPrice(results, [5, 42]);\naddToCart(36);\ncheckPrice(results, [5, 42, 36]);\naddToCart(15);\ncheckPrice(results, [5, 42, 36, 15]);\ncy.get(CART_PRODUCTS).children().eq(1).click();\ncheckPrice(results, [5, 36, 15]);",
                  "err": {},
                  "uuid": "e34ecad2-1927-4579-9f08-2db13ce939f8",
                  "parentUUID": "dbbeb1c7-c7bc-41a0-89e3-1b4887e3ae99",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "timedOut": null,
                  "duration": 560,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(15);\ncheckPrice(results, [15]);\naddToCart(45);\ncheckPrice(results, [15, 45]);\ncy.reload();\ncheckPrice(results, [15, 45]);\ncy.get(CART_PRODUCTS).children().first().click();\ncheckPrice(results, [45]);\ncy.reload();\ncheckPrice(results, [45]);",
                  "err": {},
                  "uuid": "a2feeb31-7ebe-4ff3-855b-09463059c9a3",
                  "parentUUID": "dbbeb1c7-c7bc-41a0-89e3-1b4887e3ae99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e34ecad2-1927-4579-9f08-2db13ce939f8",
                "a2feeb31-7ebe-4ff3-855b-09463059c9a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1263,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5f647c4a-8703-42a1-b85a-a64b238371ca",
              "title": "11 - Implemente a função `getAddress`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica se o endereço é exibido após o CEP ser digitado",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se o endereço é exibido após o CEP ser digitado",
                  "timedOut": null,
                  "duration": 4536,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    cy.spy(win.Promise, 'any');\n  }\n});\ncy.get(CEP_INPUT).type('01001000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'Praça da Sé - Sé - São Paulo - SP');\ncy.window().its('Promise.any').should('be.called');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'Praça da Sé - Sé - São Paulo - SP', but the text was ''",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'Praça da Sé - Sé - São Paulo - SP', but the text was ''\n    at Context.eval (http://localhost:5173/__cypress/tests?p=cypress/e2e/project.cy.js:391:28)",
                    "diff": "+ 'Praça da Sé - Sé - São Paulo - SP'\n"
                  },
                  "uuid": "7f70c72d-d4df-4c8f-b43d-1aaf08a5e815",
                  "parentUUID": "5f647c4a-8703-42a1-b85a-a64b238371ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "timedOut": null,
                  "duration": 4444,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(CEP_INPUT).type('00000000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'CEP não encontrado');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'CEP não encontrado', but the text was ''",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<span.cart__address>' to have text 'CEP não encontrado', but the text was ''\n    at Context.eval (http://localhost:5173/__cypress/tests?p=cypress/e2e/project.cy.js:397:28)",
                    "diff": "+ 'CEP não encontrado'\n"
                  },
                  "uuid": "ee3137a8-0d05-4528-9dab-faab73f70a75",
                  "parentUUID": "5f647c4a-8703-42a1-b85a-a64b238371ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "7f70c72d-d4df-4c8f-b43d-1aaf08a5e815",
                "ee3137a8-0d05-4528-9dab-faab73f70a75"
              ],
              "pending": [],
              "skipped": [],
              "duration": 8980,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}